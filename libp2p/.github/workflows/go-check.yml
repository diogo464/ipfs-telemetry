name: Go Checks

on:
  pull_request:
  push:
    branches: ["master","release-v0[0-9][0-9]"]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.event_name == 'push' && github.sha || github.ref }}
  cancel-in-progress: true

jobs:
  go-check:
    uses: ipdxco/unified-github-workflows/.github/workflows/go-check.yml@v1.0
    with:
      go-version: "1.24.x"
      go-generate-ignore-protoc-version-comments: true
  
  golangci-lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: [  "1.23.x", "1.24.x" ]
    env:
      GOLANGCI_LINT_VERSION: v2.0.2
    name: golangci-lint (Go ${{ matrix.go }})
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: golangci-lint (Linux)
        uses: golangci/golangci-lint-action@v7
        with:
          args: --timeout=5m
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          only-new-issues: true
      - name: golangci-lint (Windows)
        if: success() || failure() # run this step even if the previous one failed
        uses: golangci/golangci-lint-action@v7
        env:
          GOOS: "windows"
        with:
          args: --timeout=5m
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          only-new-issues: true
      - name: golangci-lint (OSX)
        if: success() || failure() # run this step even if the previous one failed
        uses: golangci/golangci-lint-action@v7
        env:
          GOOS: "darwin"
        with:
          args: --timeout=5m
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          only-new-issues: true
