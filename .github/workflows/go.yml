name: Go

on:
  push:
    branches:
      - main

jobs:
  build-telemetry-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Docker Login
      uses: docker/login-action@v1.14.1
      with:
        registry: ghcr.io
        username: diogo464
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Install protoc
      run: sudo apt install golang-goprotobuf-dev
    
    - name: Make setup
      run: make setup

    - name: Build binaries
      run: CGO_ENABLED=0 make build

    - name: Build and push container
      uses: docker/build-push-action@v2.10.0
      with:
        context: .
        file: deploy/telemetry/Dockerfile
        push: true
        tags: ghcr.io/diogo464/telemetry:latest

  build-ipfs-binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Install protoc
      run: sudo apt install golang-goprotobuf-dev
    
    - name: Make tools
      run: make tools

    - name: Make proto
      run: make proto

    - name: Build
      run: "scripts/build_ipfs.sh ${{ matrix.os }} ${{ matrix.arch }}"

    - uses: actions/upload-artifact@v3
      with:
        name: bin
        path: bin/ipfs*

  build-ipfs-deb:
    runs-on: ubuntu-latest
    needs: [build-ipfs-binaries]
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
    - uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      with:
        name: bin
        path: ./bin

    - name: rename binary
      run: mv "bin/ipfs_linux-${{ matrix.arch }}" bin/ipfs

    - name: build package
      run: package/package_debian.sh
      env:
        PACKAGE_ARCH: ${{ matrix.arch }}

    - uses: actions/upload-artifact@v3
      with:
        name: bin
        path: bin/ipfs_linux-${{ matrix.arch }}.deb

  build-ipfs-arch:
    runs-on: ubuntu-latest
    needs: [build-ipfs-binaries]
    strategy:
      matrix:
        arch: [amd64]
    steps:
    - uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      with:
        name: bin
        path: ./bin

    - name: rename binary
      run: mv "bin/ipfs_linux-${{ matrix.arch }}" bin/ipfs

    - name: build package
      run: package/package_archlinux_docker.sh
      env:
        PACKAGE_ARCH: ${{ matrix.arch }}

    - uses: actions/upload-artifact@v3
      with:
        name: bin
        path: bin/ipfs_linux-${{ matrix.arch }}.pkg.tar.zst

  build-ipfs-desktop:
    runs-on: ubuntu-latest
    needs: [build-ipfs-binaries]
    strategy:
      matrix:
        os: [linux, windows]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - uses: actions/download-artifact@v3
      with:
        name: bin
        path: ./bin

    - name: build
      run: "scripts/build_ipfs_desktop.sh ${{ matrix.os }} ${{ matrix.arch }}"

    - uses: actions/upload-artifact@v3
      with:
        name: bin
        path: bin/ipfs-desktop_*

  build-ipfs-docker:
    runs-on: ubuntu-latest
    needs: [build-ipfs-binaries]
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
    - uses: actions/checkout@v3

    - name: Docker Login
      uses: docker/login-action@v1.14.1
      with:
        registry: ghcr.io
        username: diogo464
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/download-artifact@v3
      with:
        name: bin
        path: ./bin

    - name: rename binary
      run: mv "bin/ipfs_linux-${{ matrix.arch }}" bin/ipfs

    - name: make binary executable
      run: chmod +x bin/ipfs

    - name: Build and push container
      uses: docker/build-push-action@v2.10.0
      with:
        context: .
        platforms: "linux/${{ matrix.arch }}"
        file: deploy/ipfs/Dockerfile
        push: true
        tags: ghcr.io/diogo464/ipfs:latest

  release:
    runs-on: ubuntu-latest
    needs: [build-ipfs-binaries, build-ipfs-deb, build-ipfs-arch, build-ipfs-desktop]

    steps:
    - uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      with:
        name: bin
        path: ./bin

    - uses: dev-drprasad/delete-tag-and-release@v0.2.0
      continue-on-error: true
      with:
        delete_release: true # default: false
        tag_name: latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: latest
        release_name: latest
        body: IPFS Telemetry
        draft: false
        prerelease: false

    - name: Upload release files
      run: scripts/action_release_bin.sh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}

    - uses: eregon/publish-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}

