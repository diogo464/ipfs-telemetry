syntax = "proto3";
package telemetry.datapoint;

import "common.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/diogo464/telemetry/pkg/proto/datapoint";

message Ping {
    google.protobuf.Timestamp timestamp         = 1;
    telemetry.AddrInfo source                   = 2;
    telemetry.AddrInfo destination              = 3;
    repeated google.protobuf.Duration durations = 4;
}

message Connections {
    message Connection {
        // remote peer id
        string peer                         = 1;
        // remote multiaddr
        string addr                         = 2; 
        google.protobuf.Duration latency    = 3;
    }

    google.protobuf.Timestamp timestamp = 1;
    repeated Connection connections     = 2;
}

message RoutingTable {
    message Bucket {
        repeated string peers = 1;
    }

    google.protobuf.Timestamp timestamp = 1;
    repeated Bucket buckets             = 2;
}

message Network {
    message Stats {
        uint64 total_in     = 1;
        uint64 total_out    = 2;
        uint64 rate_in      = 3;
        uint64 rate_out     = 4;
    }

    google.protobuf.Timestamp timestamp     = 1;
    // multiaddresses of this peer
    repeated string addresses               = 2;
    Stats stats_overall                     = 3;
    // ProtocolID -> Stats
    map<string, Stats> stats_by_protocol    = 4;
    // PeerID -> Stats.
    // Not allways present.
    map<string, Stats> stats_by_peer        = 5;
    uint32 num_conns                        = 6;
    uint32 low_water                        = 7;
    uint32 high_water                       = 8;
}

message Resources {
    google.protobuf.Timestamp timestamp     = 1;
    // overall percent cpu usage, 0% <= cpu <= 100%
    float cpu_process       = 2;
    float cpu_system        = 3;
    // total memory in use by this process
    uint64 memory_used      = 4;
    // total system free memory
    uint64 memory_free      = 5;
    // total system memory
    uint64 memory_total     = 6;
    uint32 goroutines       = 7;
}

message TraceRoute {
    google.protobuf.Timestamp timestamp     = 1;
    telemetry.AddrInfo origin               = 2;
    telemetry.AddrInfo destination          = 3;
    // name of the traceroute executable
    string provider                         = 4;
    // stdout of the process
    bytes output                            = 5;
}

enum KademliaMessageType {
    PUT_VALUE      = 0;
    GET_VALUE      = 1;
    ADD_PROVIDER   = 2;
    GET_PROVIDERS  = 3;
    FIND_NODE      = 4;
    PING           = 5;
}

message Kademlia {
    google.protobuf.Timestamp timestamp     = 1;
    // map<KademliaMessageType, uint64>
    map<uint32, uint64> messages_in         = 2;
    map<uint32, uint64> messages_out        = 3;
}

message KademliaQuery {
    google.protobuf.Timestamp timestamp     = 1;
    string peer                             = 2;
    KademliaMessageType query_type          = 3;
    google.protobuf.Duration duration       = 4; 
}

message KademliaHandler {
    google.protobuf.Timestamp timestamp         = 1;
    KademliaMessageType handler_type            = 3;
    google.protobuf.Duration handler_duration   = 4; 
    google.protobuf.Duration write_duration     = 5; 
}

message Bitswap {
    google.protobuf.Timestamp timestamp     = 1;
    uint32 discovery_succeeded              = 2;
    uint32 discovery_failed                 = 3;
    uint64 messages_in                      = 4;
    uint64 messages_out                     = 5;
}

message Storage {
    google.protobuf.Timestamp timestamp     = 1;
    uint64 storage_used                     = 2;
    uint64 storage_total                    = 3;
    uint64 num_objects                      = 4;
}

message Window {
    google.protobuf.Timestamp timestamp         = 1;
    google.protobuf.Duration window_duration    = 2;
    // maps datapoint name to its count
    map<string, uint32> datapoint_count         = 3;
    // maps datapoint name to its estimate memory usage
    map<string, uint32> datapoint_memory        = 4;
}

message Datapoint  {
    oneof body {
        Ping ping                       = 1; 
        Connections connections         = 2;
        RoutingTable routing_table      = 3;
        Network network                 = 4;
        Resources resources             = 5;
        TraceRoute traceroute           = 6;
        Kademlia kademlia               = 7;
        KademliaQuery kademlia_query    = 8;
        KademliaHandler kademlia_handler= 9;
        Bitswap bitswap                 = 10;
        Storage storage                 = 11;
        Window window                   = 12;
    }
}
