syntax = "proto3";
package telemetry;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/diogo464/telemetry/pkg/proto/telemetry";

message SystemInfo {
    string os       = 1; 
    string arch     = 2;
    uint32 numcpu   = 3;
}

message ProviderRecord {
    bytes key                               = 1;
    bytes peer                              = 2;
    google.protobuf.Timestamp last_refresh  = 3;
}

message TelemetryDebug {
    message Stream {
        string name     = 1;
        uint32 used     = 2;
        uint32 total    = 3;
    }

    google.protobuf.Timestamp timestamp     = 1;
    repeated Stream streams                 = 2;
}

message StreamSegment {
    uint32 seqn = 1;
    bytes data  = 2;
}

service Telemetry {
    rpc GetSessionInfo(google.protobuf.Empty) returns (GetSessionInfoResponse);
    rpc GetSystemInfo(google.protobuf.Empty) returns (SystemInfo);
    rpc GetAvailableStreams(GetAvailableStreamsRequest) returns (GetAvailableStreamsResponse);
    rpc GetStream(GetStreamRequest) returns (stream StreamSegment);
    rpc GetProviderRecords(GetProviderRecordsRequest) returns (stream ProviderRecord);
    rpc GetDebug(google.protobuf.Empty) returns (TelemetryDebug);
}

message GetSessionInfoResponse  {
    string session                      = 1;
    google.protobuf.Timestamp boot_time = 2;
}

message GetAvailableStreamsRequest {}

message GetAvailableStreamsResponse {
    repeated string streams = 1;
}

message GetStreamRequest {
    string stream   = 1;
    uint32 seqn     = 2;
}

message GetProviderRecordsRequest {}
