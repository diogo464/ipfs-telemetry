syntax = "proto3";
package telemetry;

import "google/protobuf/empty.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "git.d464.sh/uni/telemetry/pb";

message SystemInfo {
    string os       = 1; 
    string arch     = 2;
    uint32 numcpu   = 3;
}

message TelemetryDebug {
    message Stream {
        string name     = 1;
        uint32 used     = 2;
        uint32 total    = 3;
    }

    google.protobuf.Timestamp timestamp     = 1;
    repeated Stream streams                 = 2;
}


message StreamSegment {
    uint32 seqn = 1;
    bytes data  = 2;
}

service Telemetry {
    rpc GetSessionInfo(google.protobuf.Empty) returns (GetSessionInfoResponse);
    rpc GetSystemInfo(google.protobuf.Empty) returns (SystemInfo);
    rpc GetAvailableStreams(GetAvailableStreamsRequest) returns (stream AvailableStream);
    rpc GetStream(GetStreamRequest) returns (stream StreamSegment);
    rpc GetAvailableProperties(GetAvailablePropertiesRequest) returns (stream AvailableProperty);
    rpc GetProperty(GetPropertyRequest) returns (stream PropertySegment);
    rpc GetDebug(google.protobuf.Empty) returns (TelemetryDebug);
}

message GetSessionInfoResponse  {
    string session                      = 1;
    google.protobuf.Timestamp boot_time = 2;
}

message GetAvailableStreamsRequest {}

message AvailableStream {
    string name                         = 1;
    google.protobuf.Duration period     = 2;
    string encoding                     = 3;
}

message GetStreamRequest {
    // name of the stream
    string stream       = 1;
    // starting sequence number
    uint32 seqn         = 2;
    // 0 = end after there are no more segments to return
    // 1 = keep alive and stream more segments as they are created
    uint32 keepalive    = 3;
}

message GetAvailablePropertiesRequest {}

message AvailableProperty {
    string name     = 1;
    string encoding = 2;
}

message GetPropertyRequest {
    // name of the property
    string property       = 1;
}

message PropertySegment {
    bytes data  = 1;
}

