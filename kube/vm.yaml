apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vm
  labels:
    app: vm
    app.kubernetes.io/name: vm
spec:
  storageClassName: blackmesa
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vm
data:
  scrape.yaml: |
    scrape_configs:
    - job_name: metrics
      scrape_interval: 5s
      static_configs:
      - targets:
        - monitor:9090 # monitor
        - crawler:9090 # crawler
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: vm
  template:
    metadata:
      labels:
        app: vm
        app.kubernetes.io/name: vm
    spec:
      containers:
        - name: vm
          image: docker.io/victoriametrics/victoria-metrics:stable
          args: ["--selfScrapeInterval=5s", "-storageDataPath=/victoria-metrics-data", "-promscrape.config=/etc/scrape.yaml"]
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: data
              mountPath: /victoria-metrics-data
            - name: config
              mountPath: /etc/scrape.yaml
              subPath: scrape.yaml
              readOnly: true
          resources:
            requests:
              memory: "128Mi"
              cpu: "0"
            limits:
              memory: "1G"
              cpu: "2"
          ports:
            - name: http
              containerPort: 8428
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: vm
        - name: config
          configMap:
            name: vm
---
apiVersion: v1
kind: Service
metadata:
  name: vm
  labels:
    app.kubernetes.io/name: vm
spec:
  selector:
    app.kubernetes.io/name: vm
  ports:
    - name: http
      port: 8428
      targetPort: http

